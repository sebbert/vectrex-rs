#[derive(Debug)]
pub enum Opcode {
	Abx,
	Adca,
	Adcb,
	Adda,
	Addb,
	Addd,
	Anda,
	Andb,
	Andcc,
	Asla,
	Aslb,
	Asl,
	Asra,
	Asrb,
	Asr,
	Bita,
	Bitb,
	Clra,
	Clrb,
	Clr,
	Cmpa,
	Cmpb,
	Cmpd,
	Cmps,
	Cmpu,
	Cmpx,
	Cmpy,
	Lsra,
	Lsrb,
	Lsr,
	Mul,
	Nega,
	Negb,
	Neg,
	Nop,
	Ora,
	Orb,
	Orcc,
	Pshs,
	Pshu,
	Puls,
	Pulu,
	Rola,
	Rolb,
	Rol,
	Rora,
	Rorb,
	Ror,
	Rti,
	Rts,
	Sbca,
	Sbcb,
	Sex,
	Coma,
	Comb,
	Com,
	Cwai,
	Daa,
	Deca,
	Decb,
	Dec,
	Eora,
	Eorb,
	Exg,
	Inca,
	Incb,
	Inc,
	Jmp,
	Jsr,
	Lda,
	Ldb,
	Ldd,
	Lds,
	Ldu,
	Ldx,
	Ldy,
	Leas,
	Leau,
	Leax,
	Leay,
	Sta,
	Stb,
	Std,
	Stu,
	Stx,
	Sty,
	Suba,
	Subb,
	Subd,
	Swi,
	Swi2,
	Swi3,
	Sync,
	Tfr1,
	Tsta,
	Tstb,
	Tst,
}

enum AddressingMode {
	Inherent,
	Immediate,
	Direct,
	Extended,
	Indexed
}

impl Opcode {
	pub fn from_u16(op_16: u16) -> Option<Opcode> {
		let hi_op = (op_16 >> 8) as u8;
		match hi_op {
			0x10 => {
				let op = op_16 as u8;
				match op {
					0x83|0x93|0xa3|0xb3 => Some(Opcode::Cmpd),
					0x8c|0x9c|0xac|0xbc => Some(Opcode::Cmpy),
					0xce|0xde|0xee|0xfe => Some(Opcode::Lds),
					0x8e|0x9e|0xae|0xbe => Some(Opcode::Ldy),
					0x9f|0xaf|0xbf => Some(Opcode::Sty),
					0x3f => Some(Opcode::Swi2),

					
					_ => panic!("Unknown opcode 0x{:02x}", op)
				}
			},
			0x11 => {
				let op = op_16 as u8;

				match op {
					0x8c|0x9c|0xac|0xbc => Some(Opcode::Cmps),
					0x83|0x93|0xa3|0xb3 => Some(Opcode::Cmpu),
					0x3f => Some(Opcode::Swi3),

					_ => panic!("Unknown opcode 0x{:02x}", op)
				}
			}
			_ => Self::from_u8(hi_op)
		}
	}

	pub fn from_u8(op: u8) -> Option<Opcode> {
		match op {
			0x3a => Some(Opcode::Abx),
			0x89|0x99|0xa9|0xb9 => Some(Opcode::Adca),
			0xc9|0xd9|0xe9|0xf9 => Some(Opcode::Adcb),
			0x8b|0x9b|0xab|0xbb => Some(Opcode::Adda),
			0xcb|0xdb|0xeb|0xfb => Some(Opcode::Addb),
			0xc3|0xd3|0xe3|0xf3 => Some(Opcode::Addd),
			0x84|0x94|0xa4|0xb4 => Some(Opcode::Anda),
			0xc4|0xd4|0xe4|0xf4 => Some(Opcode::Andb),
			0x1c => Some(Opcode::Andcc),
			0x48 => Some(Opcode::Asla),
			0x58 => Some(Opcode::Aslb),
			0x08|0x68|0x78 => Some(Opcode::Asl),
			0x47 => Some(Opcode::Asra),
			0x57 => Some(Opcode::Asrb),
			0x07|0x67|0x77 => Some(Opcode::Asr),
			0x85|0x95|0xa5|0xb5 => Some(Opcode::Bita),
			0xc5|0xd5|0xe5|0xf5 => Some(Opcode::Bitb),
			0x4f => Some(Opcode::Clra),
			0x5f => Some(Opcode::Clrb),
			0x0f|0x6f|0x7f => Some(Opcode::Clr),
			0x81|0x91|0xa1|0xb1 => Some(Opcode::Cmpa),
			0xc1|0xd1|0xe1|0xf1 => Some(Opcode::Cmpb),
			0x8c|0x9c|0xac|0xbc => Some(Opcode::Cmpx),
			0x44 => Some(Opcode::Lsra),
			0x54 => Some(Opcode::Lsrb),
			0x04|0x64|0x74 => Some(Opcode::Lsr),
			0x3d => Some(Opcode::Mul),
			0x40 => Some(Opcode::Nega),
			0x50 => Some(Opcode::Negb),
			0x00|0x60|0x70 => Some(Opcode::Neg),
			0x12 => Some(Opcode::Nop),
			0x8a|0x9a|0xaa|0xba => Some(Opcode::Ora),
			0xca|0xda|0xea|0xfa => Some(Opcode::Orb),
			0x1a => Some(Opcode::Orcc),
			0x34 => Some(Opcode::Pshs),
			0x36 => Some(Opcode::Pshu),
			0x35 => Some(Opcode::Puls),
			0x37 => Some(Opcode::Pulu),
			0x49 => Some(Opcode::Rola),
			0x59 => Some(Opcode::Rolb),
			0x09|0x69|0x79 => Some(Opcode::Rol),
			0x46 => Some(Opcode::Rora),
			0x56 => Some(Opcode::Rorb),
			0x06|0x66|0x76 => Some(Opcode::Ror),
			0x3b => Some(Opcode::Rti),
			0x39 => Some(Opcode::Rts),
			0x82|0x92|0xa2|0xb2 => Some(Opcode::Sbca),
			0xc2|0xd2|0xe2|0xf2 => Some(Opcode::Sbcb),
			0x1d => Some(Opcode::Sex),
			0x43 => Some(Opcode::Coma),
			0x53 => Some(Opcode::Comb),
			0x03|0x63|0x73 => Some(Opcode::Com),
			0x3c => Some(Opcode::Cwai),
			0x19 => Some(Opcode::Daa),
			0x4a => Some(Opcode::Deca),
			0x5a => Some(Opcode::Decb),
			0x0a|0x6a|0x7a => Some(Opcode::Dec),
			0x88|0x98|0xa8|0xb8 => Some(Opcode::Eora),
			0xc8|0xd8|0xe8|0xf8 => Some(Opcode::Eorb),
			0x1e => Some(Opcode::Exg),
			0x4c => Some(Opcode::Inca),
			0x5c => Some(Opcode::Incb),
			0x0c|0x6c|0x7c => Some(Opcode::Inc),
			0x0e|0x6e|0x7e => Some(Opcode::Jmp),
			0x9d|0xad|0xbd => Some(Opcode::Jsr),
			0x86|0x96|0xa6|0xb6 => Some(Opcode::Lda),
			0xc6|0xd6|0xe6|0xf6 => Some(Opcode::Ldb),
			0xcc|0xdc|0xec|0xfc => Some(Opcode::Ldd),
			0xce|0xde|0xee|0xfe => Some(Opcode::Ldu),
			0x8e|0x9e|0xae|0xbe => Some(Opcode::Ldx),
			0x32 => Some(Opcode::Leas),
			0x33 => Some(Opcode::Leau),
			0x30 => Some(Opcode::Leax),
			0x31 => Some(Opcode::Leay),
			0x97|0xa7|0xb7 => Some(Opcode::Sta),
			0xd7|0xe7|0xf7 => Some(Opcode::Stb),
			0xdd|0xed|0xfd => Some(Opcode::Std),
			0xdf|0xef|0xff => Some(Opcode::Stu),
			0x9f|0xaf|0xbf => Some(Opcode::Stx),
			0x80|0x90|0xa0|0xb0 => Some(Opcode::Suba),
			0xc0|0xd0|0xe0|0xf0 => Some(Opcode::Subb),
			0x83|0x93|0xa3|0xb3 => Some(Opcode::Subd),
			0x3f => Some(Opcode::Swi),
			0x13 => Some(Opcode::Sync),
			0x1f => Some(Opcode::Tfr1),
			0x4d => Some(Opcode::Tsta),
			0x5d => Some(Opcode::Tstb),
			0x0d|0x6d|0x7d => Some(Opcode::Tst),

			_ => None
		}
	}
}
